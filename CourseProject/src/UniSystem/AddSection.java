/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UniSystem;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author Lenovo
 */
public class AddSection extends javax.swing.JFrame {

    private myDBCon mycon ;
    
    Statement statement;
    PreparedStatement prepStatement;
    ResultSet rs;
    /**
     * Creates new form AddSection
     */
    public AddSection() {
        mycon = new myDBCon();
        initComponents();
        this.setLocationRelativeTo(null);
        CRNError.setVisible(false);
        SemError.setVisible(false);
        LocError.setVisible(false);
        TimeError.setVisible(false);
        try
        {
            rs = mycon.getstate().executeQuery("Select course_code from courses order by course_code");
            while(rs.next())
            {
                cmbCode.addItem(rs.getString("course_code"));
            }
            
            rs = mycon.getstate().executeQuery("Select pid from professors order by pid");
            while(rs.next())
            {
                cmbProfID.addItem(rs.getString("pid"));
            }
            
            rs.close();
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }

    }
    
    void clearInputBoxes() {
        txtCRN.setText("");
        cmbCode.setSelectedIndex(0);
        cmbProfID.setSelectedIndex(0);
        txtSem.setText("");
        txtLoc.setText("");
        txtTime.setText("");
    }
    
    public boolean isInteger(String s) {
        try {
            Integer.parseInt(s);
            return true;
        } catch (NumberFormatException ex) {
            return false;
        }
    }

    public boolean isDouble(String s) {
        try {
            Double.parseDouble(s);
            return true;
        } catch (NumberFormatException ex) {
            return false;
        }
    }
    
    void clearErrorLabels() {
        CRNError.setText("");
        CRNError.setVisible(false);
        SemError.setText("");
        SemError.setVisible(false);
        LocError.setText("");
        LocError.setVisible(false);
        TimeError.setText("");
        TimeError.setVisible(false);
    }
    
    boolean isValidData() {

        clearErrorLabels();
        boolean result = true;
        if (txtCRN.getText().trim().isEmpty() || !isInteger(txtCRN.getText().trim())) {
            if (txtCRN.getText().trim().isEmpty()) {
                CRNError.setText("Invalid. Cannot be empty.");
            } else if (!isInteger(txtCRN.getText().trim())) {
                CRNError.setText("Invalid. Must be integer.");
            }
            CRNError.setVisible(true);
            result = false;
        }

        if (txtSem.getText().trim().isEmpty() || (txtSem.getText().trim().length() > 25)) {
            if(txtSem.getText().trim().isEmpty())
                SemError.setText("Invalid. Cannot be empty.");
            else if(txtSem.getText().trim().length() > 25)
                SemError.setText("Invalid. Must be < 25 chars.");
            SemError.setVisible(true);
            result = false;
        }
        
        if (txtLoc.getText().trim().isEmpty() || (txtLoc.getText().trim().length() > 50)) {
            if(txtLoc.getText().trim().isEmpty())
                LocError.setText("Invalid. Cannot be empty.");
            else if(txtLoc.getText().trim().length() > 50)
                LocError.setText("Invalid. Must be < 50 chars.");
            LocError.setVisible(true);
            result = false;
        }
        
        if (txtTime.getText().trim().isEmpty() || (txtTime.getText().trim().length() > 50)) {
            if(txtTime.getText().trim().isEmpty())
                TimeError.setText("Invalid. Cannot be empty.");
            else if(txtTime.getText().trim().length() > 50)
                TimeError.setText("Invalid. Must be < 50 chars.");
            TimeError.setVisible(true);
            result = false;
        }

        return result;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAddNewSection = new javax.swing.JButton();
        Location = new javax.swing.JLabel();
        Time = new javax.swing.JLabel();
        CRNError = new javax.swing.JLabel();
        txtCRN = new javax.swing.JTextField();
        SemError = new javax.swing.JLabel();
        Title = new javax.swing.JLabel();
        LocError = new javax.swing.JLabel();
        CRNNo = new javax.swing.JLabel();
        txtLoc = new javax.swing.JTextField();
        TimeError = new javax.swing.JLabel();
        txtTime = new javax.swing.JTextField();
        CourseCode = new javax.swing.JLabel();
        cmbProfID = new javax.swing.JComboBox<>();
        cmbCode = new javax.swing.JComboBox<>();
        ProfID = new javax.swing.JLabel();
        Semester = new javax.swing.JLabel();
        txtSem = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add New Section");

        btnAddNewSection.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnAddNewSection.setText("Add New");
        btnAddNewSection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewSectionActionPerformed(evt);
            }
        });

        Location.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Location.setText("LOCATION:");

        Time.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Time.setText("TIME:");

        CRNError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        CRNError.setForeground(new java.awt.Color(255, 0, 0));
        CRNError.setText("error label");

        txtCRN.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        SemError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        SemError.setForeground(new java.awt.Color(255, 0, 0));
        SemError.setText("error label");

        Title.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        Title.setText("Add New Section");

        LocError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        LocError.setForeground(new java.awt.Color(255, 0, 0));
        LocError.setText("error label");

        CRNNo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        CRNNo.setText("CRN NO:");

        txtLoc.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtLoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLocActionPerformed(evt);
            }
        });

        TimeError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        TimeError.setForeground(new java.awt.Color(255, 0, 0));
        TimeError.setText("error label");

        txtTime.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimeActionPerformed(evt);
            }
        });

        CourseCode.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        CourseCode.setText("COURSE CODE:");

        cmbProfID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        cmbCode.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        ProfID.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ProfID.setText("PROFESSOR ID:");

        Semester.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Semester.setText("SEMESTER:");

        txtSem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtSem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addComponent(Title))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(CRNNo)
                            .addComponent(CourseCode)
                            .addComponent(ProfID)
                            .addComponent(Semester)
                            .addComponent(Location)
                            .addComponent(Time))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtCRN, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CRNError, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(cmbProfID, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtTime, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                    .addComponent(txtLoc, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbCode, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtSem, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(SemError, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                    .addComponent(LocError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(TimeError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(201, 201, 201)
                        .addComponent(btnAddNewSection)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Title)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CRNNo)
                    .addComponent(txtCRN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CRNError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CourseCode))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ProfID)
                    .addComponent(cmbProfID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SemError, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Semester)
                        .addComponent(txtSem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Location)
                    .addComponent(txtLoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LocError))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Time)
                    .addComponent(txtTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TimeError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(btnAddNewSection)
                .addGap(35, 35, 35))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddNewSectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewSectionActionPerformed
        // TODO add your handling code here:

        try {
            // make the result set scrolable forward/backward updatable

            if (isValidData()) {
                prepStatement = mycon.getCon().prepareStatement("INSERT INTO courses_sections (crn,course_code,pid,semester,location,time) VALUES (?,?,?,?,?,?)");
                prepStatement.setInt(1, Integer.parseInt(txtCRN.getText()));
                prepStatement.setString(2, cmbCode.getSelectedItem().toString());
                prepStatement.setString(3, cmbProfID.getSelectedItem().toString());
                prepStatement.setString(4, txtSem.getText());
                prepStatement.setString(5, txtLoc.getText());
                prepStatement.setString(6, txtTime.getText());
                int result = prepStatement.executeUpdate();
                if (result > 0) {

                    javax.swing.JLabel label = new javax.swing.JLabel("New section added successfully.");
                    label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                    JOptionPane.showMessageDialog(null, label, "SUCCESS", JOptionPane.INFORMATION_MESSAGE);
                    clearInputBoxes();
                } else {
                    // check validation errors
                }
                prepStatement.close();
            } else {
                javax.swing.JLabel label = new javax.swing.JLabel("Please fix validation errors...");
                label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.ERROR_MESSAGE);

            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error adding new section.");
        }
    }//GEN-LAST:event_btnAddNewSectionActionPerformed

    private void txtLocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLocActionPerformed

    private void txtTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimeActionPerformed

    private void txtSemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSemActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CRNError;
    private javax.swing.JLabel CRNNo;
    private javax.swing.JLabel CourseCode;
    private javax.swing.JLabel LocError;
    private javax.swing.JLabel Location;
    private javax.swing.JLabel ProfID;
    private javax.swing.JLabel SemError;
    private javax.swing.JLabel Semester;
    private javax.swing.JLabel Time;
    private javax.swing.JLabel TimeError;
    private javax.swing.JLabel Title;
    private javax.swing.JButton btnAddNewSection;
    private javax.swing.JComboBox<String> cmbCode;
    private javax.swing.JComboBox<String> cmbProfID;
    private javax.swing.JTextField txtCRN;
    private javax.swing.JTextField txtLoc;
    private javax.swing.JTextField txtSem;
    private javax.swing.JTextField txtTime;
    // End of variables declaration//GEN-END:variables
}
